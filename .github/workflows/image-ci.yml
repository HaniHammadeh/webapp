name: image-ci

on:
  push:
    branches:
      - "main"
    tags:
      - "[0-9]*.[0-9]*.[0-9]*"
    paths:
      # Only rebuild images when applications change
      - "scrapper/**/*"

jobs:
  generate-image-tag:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.generate-image-tag.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Necessary to get all tags for IMAGE_TAG generation with git describe
          fetch-depth: 0

      - name: Generate Image Tag
        id: generate-image-tag
        run: |
          TAG=$(git describe --tags --abbrev=0 || echo "0.1.0")
          SHA=$(git rev-parse --short HEAD)
          IMAGE_TAG="$TAG-$SHA"
          image_tag=${IMAGE_TAG}
          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT

  build-tag-push:
    runs-on: ubuntu-latest
    needs: generate-image-tag
    strategy:
      matrix:
        path:
          - api
          - scrapper

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Image
        env:
          IMAGE_TAG: ${{ needs.generate-image-tag.outputs.image_tag }}
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp-api:${IMAGE_TAG} -f api/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp-api:${IMAGE_TAG}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp-scraper:${IMAGE_TAG} -f scraper/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp-scraper:${IMAGE_TAG}
